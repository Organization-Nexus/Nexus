services:
  # backend
  backend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/backend:latest
    container_name: backend-prod
    environment:
      - TZ=Asia/Seoul
      - NODE_ENV=production
    env_file:
      - ./backend/.env.production
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      database-prod:
        condition: service_healthy
      redis:
        condition: service_started

  # database
  database-prod:
    image: postgres:15-alpine
    container_name: database-prod
    environment:
      - TZ=Asia/Seoul
    env_file:
      - ./backend/.env.production
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:alpine
    container_name: redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # frontend
  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/frontend:latest
    container_name: frontend-prod
    env_file:
      - ./frontend/.env.production
    ports:
      - "80:3000"
    restart: always
    depends_on:
      - backend

volumes:
  pgdata:
  redis_data:
